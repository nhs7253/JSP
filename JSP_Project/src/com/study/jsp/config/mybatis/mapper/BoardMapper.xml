<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.jsp.config.mybatis.mapper.BoardMapper">



	 <sql id="all-column">
        board_number,
     	board_title,
     	board_text,
    	board_hit,
     	board_date
	</sql>
 
 
 <!-- 매장 resultMap -->
 	<resultMap type="com.study.jsp.vo.Board" id="board-resultmap">
 		<id column="board_number" property="boardNumber"/>
 		<result column="board_title" property="boardTitle"/>
 		<result column="board_text" property="boardText"/>
 		<result column="board_hit" property="boardHit"/>
 		<result column="board_date" property="boardDate"/>
 	</resultMap>
 	
 	
 	
 	<select id="selectBoardAll" resultMap="board-resultmap">
		SELECT <include refid="all-column"/> 
		FROM board 
	</select>
 	

 	
 
 

 <!--매장 등록 Store insert  -->
	<insert id="insertStore" parameterType="com.cnb.vo.Store">
		INSERT INTO store
		values(
			#{storeId},
			#{storeName},
			#{storeIntro},
			#{storePhone},
			#{storeAddress},
			#{storeEmail},
			#{storeCategory},
			#{storeHits},
			#{storeOpen},
			#{storeClose},
			#{storePermission})
	</insert> 

 <!--매장 수정 Store update  -->
 	<update id="updateStore" parameterType="com.cnb.vo.Store">
 		UPDATE store
 		SET 
 			store_name = #{storeName},
			store_intro = #{storeIntro},
			store_phone = #{storePhone},
			store_address = #{storeAddress},
			store_email = #{storeEmail},
			store_category = #{storeCategory},
			store_hits = #{storeHits},
			store_open = #{storeOpen},
			store_close = #{storeClose},
			store_permission = #{storePermission}
 		WHERE store_id = #{storeId}
 	</update>
 	
 	 <update id="updateStorePermission" parameterType="map">
 		UPDATE store
 		SET store_permission = #{storePermission}
 		WHERE store_id = #{storeId}
 	</update>
 	
 	<!-- 매장 사진 조회 Store select  -->
	<select id="selectStorePicture" resultMap="store-storePicture-resultmap" parameterType="string">
		SELECT  s.store_id,
				s.store_name,
				s.store_intro,
				s.store_phone,
				s.store_address,
				s.store_email,
				s.store_category,
				s.store_hits,
				s.store_open,
				s.store_close,
				sp.store_picture
		FROM store s,store_picture sp
		WHERE s.store_id = sp.store_id
		AND s.store_id=#{value}
	</select>
	
	<!-- 매장 이벤트 조회 StoreEvent Select -->
	<select id="selectStoreEventList" resultMap="store-storeEvent-resultmap" parameterType="string">
		SELECT s.store_id,
			   s.store_name,
			   sv.event_no,
			   sv.event_title,
			   sv.event_start_date,
			   sv.event_end_date,
			   sv.event_details,
			   sv.sale_option,
			   sv.sale_rate,
			   sv.event_picture,
			   sv.new_menu_option,
			   sv.event_check
		FROM store s,store_event sv
		WHERE s.store_id = sv.store_id
		AND s.store_id=#{value}
			   
	
	</select>
	
	<!-- 매장 분류 조회 StoreCategory select -->
	<select id="selectStoreCategoryList" resultMap="store-storeCategory-resultmap" parameterType="String">
		SELECT s.store_id,
			   s.store_name,
			   sc.store_category
		FROM store s,store_category sc
		WHERE s.store_id = sc.store_id
		AND s.store_id=#{value}
	</select>
	
	<!-- 내 매장 조회(매장컬럼만) selectStorebyId -->
	<select id="selectStoreById" resultMap="store-resultmap" parameterType="String">
		SELECT	
			store_id,
			store_name,
			store_intro,
			store_phone,
			store_address,
			store_email,
			store_category,
			store_hits,
			store_open,
			store_close,
			store_permission
		FROM store  
		WHERE store_id=#{storeId}
		
	</select>
	
	<!-- 내매장(옵션,옵션상세) 조회  -->
	<select id="selectOpionCategoryNDetailById" resultMap="Store-OptionCategory-OptionDetail-resultmap" parameterType="String">
		SELECT	
			s.store_id,
			s.store_name,
			s.store_intro,
			s.store_phone,
			s.store_address,
			s.store_email,
			s.store_category,
			s.store_hits,
			s.store_open,
			s.store_close,
			s.store_permission,
			oc.option_category,
			od.option_category_detail
		FROM store s,option_category oc,option_detail od  
		WHERE s.store_id = oc.store_id
		AND s.store_id = od.store_id
		AND s.store_id=#{value}
	
	</select>
	
	<!-- 매장 삭제 -->
	<delete id="deleteStoreById" parameterType="com.cnb.vo.Store">
		DELETE FROM store
		WHERE store_id=#{storeId}
	</delete>
	
	<select id="selectStoreBySelectAndKeywordPagingList" parameterType="map" resultMap="store-storePosition-StorePicture-resultmap">
			SELECT store_id,
       			   store_name,
       			   store_intro,
       			   store_phone,
       			   store_address,
       			   store_email,
       			   store_category,
       			   store_hits,
       			   store_open,
       			   store_close,
       			   store_permission,
       			   store_picture,
       			   x,
       			   y
			FROM(
					SELECT rownum rnum, 
	  					   store_id,
       					   store_name,
                           store_intro,
       					   store_phone,
       					   store_address,
       					   store_email,
       					   store_category,
       					   store_hits,
       					   store_open,
       					   store_close,
       					   store_permission,
       					   store_picture,
       					   x,
       					   y
					FROM(
						SELECT s.store_id,
       						   store_name,
                               store_intro,
       						   store_phone,
       						   store_address,
       						   store_email,
       						   store_category,
      						   store_hits,
      						   store_open,
       						   store_close,
       						   store_permission,
       						   store_picture,
       						   x,
							   y
						FROM store s, store_position sps, store_picture sp
						WHERE s.store_id = sps.store_id(+)
						AND s.store_id = sp.store_id(+)
						<choose>
							<when test="select == 'storeName'">
								AND store_name LIKE '%'||#{keyword}||'%' AND store_permission = 'Y'
							</when>
							<when test="select == 'storeIntro'">
								AND store_intro LIKE '%'||#{keyword}||'%' AND store_permission = 'Y'
							</when>
							<when test="select == 'storeAddress'">
								AND store_address LIKE '%'||#{keyword}||'%' AND store_permission = 'Y'
							</when>
							<when test="select == 'storeCategory'">
								AND store_category LIKE '%'||#{keyword}||'%' AND store_permission = 'Y'
							</when>
							<otherwise>
								1 = -1	<!-- 아무것도 select안되게 거짓 조건 설정 -->
							</otherwise>		
						</choose>
						ORDER BY store_name
					) 
					WHERE rownum &lt;= #{endIndex}
			)
			WHERE rnum >= #{startIndex}
	</select>
	

	<!-- 모든 매장 id 조회 -->
	<select id="selectAllStoreId" resultType="string">
		SELECT  store_id
		FROM	store
	</select>
	

	<select id="selectStoreBySelectAndKeywordPagingCount" parameterType="map" resultType="_int">
		SELECT COUNT(*)
		FROM store s, store_position sps, store_picture sp
		WHERE s.store_id = sps.store_id(+)
		AND s.store_id = sp.store_id(+)
		<choose>
			<when test="select == 'storeName'">
				AND store_name LIKE '%'||#{keyword}||'%' AND store_permission = 'Y'
			</when>
			<when test="select == 'storeIntro'">
				AND store_intro LIKE '%'||#{keyword}||'%' AND store_permission = 'Y'
			</when>
			<when test="select == 'storeAddress'">
				AND store_address LIKE '%'||#{keyword}||'%' AND store_permission = 'Y'
			</when>
			<when test="select == 'storeCategory'">
				AND store_category LIKE '%'||#{keyword}||'%' AND store_permission = 'Y'
			</when>
			<otherwise>
				1 = -1	<!-- 아무것도 select안되게 거짓 조건 설정 -->
			</otherwise>		
		</choose>
	</select>
	
	<select id="selectStroeJoinPicture" resultMap="store-storePicture-optionCategory-storePaymentOption-storePosition-resultmap" parameterType="string">
		SELECT  s.store_id,
				s.store_name,
				s.store_intro,
				s.store_phone,
				s.store_address,
				s.store_email,
				s.store_category,
				s.store_hits,
				s.store_open,
				s.store_close,
				s.store_permission,
				sp.store_picture,
				oc.option_id,
				oc.option_category,
				spo.payment_id,
				po.payment_method,
				sps.x,
				sps.y
		FROM store s, store_picture sp, option_category oc, store_payment_optionlist spo , payment_optionlist po, store_position sps
		WHERE s.store_id = sps.store_id
		AND s.store_id = sp.store_id(+) 
		AND s.store_id = oc.store_id(+)
		AND s.store_id = spo.store_id(+)
		AND spo.payment_id = po.payment_id(+)
		AND s.store_id=#{value}
	</select>
</mapper>